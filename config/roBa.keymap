#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <28 22>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <28 23>;
        };

        BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <28 24>;
        };

        BT3 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <28 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };

        pim: M1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp X &kp X &kp P &kp I &kp M>;
            label = "M1";
        };

        parenthesis: parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "PARENTHESIS";
        };

        pim2: pim2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp I &kp M &kp RS(K) &kp LS(H) &kp UNDERSCORE>;
            label = "PIM2";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        multi_tap_tab_bspc: behavior_multi_tap {
            label = "MT_TAB_BSPC";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp BSPC>;

            max-taps = <2>;
            max-tap-interrupt-ms = <250>;
        };

        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E             &kp R                        &kp T                                                        &kp Y        &kp U  &kp I      &kp O    &lt 5 P
&kp A             &kp S         &kp D             &kp F                        &kp G        &trans                           &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C             &kp V                        &kp B        &kp TAB                          &kp AT_SIGN    &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt_to_layer_0 6 LANGUAGE_2  &lt 2 SPACE  &lt_to_layer_0 3 LANGUAGE_1      &kp BACKSPACE  &lt 1 ENTER                             &kp DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOLS {
            bindings = <
&kp ESCAPE  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS                            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans             &kp RG(RC(Q))
&kp TILDE   &kp DOLLAR       &kp PERCENT   &kp CARET               &trans                 &trans      &parenthesis  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON  &kp SQT            &kp BACKSLASH
&kp GRAVE   &kp EXCLAMATION  &kp AT_SIGN   &kp HASH                &trans                 &trans      &trans        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON      &kp DOUBLE_QUOTES  &kp PIPE
&trans      &trans           &trans        &to_layer_0 LANGUAGE_2  &trans                 &trans      &trans        &trans                                                                         &trans
            >;
        };

        NUM {
            bindings = <
&kp ESCAPE            &kp F7  &kp F8  &kp F9                  &kp F10                          &kp ASTERISK     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS
&kp LG(LS(NUMBER_4))  &kp F4  &kp F5  &kp F6                  &kp F11  &trans      &kp EQUAL   &kp SLASH        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp MINUS
&kp LG(LS(NUMBER_5))  &kp F1  &kp F2  &kp F3                  &kp F12  &trans      &kp PERIOD  &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp BACKSPACE
&trans                &pim2   &pim    &to_layer_0 LANGUAGE_2  &trans   &trans      &pim        &pim2                                                               &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT_ARROW)                      &kp RG(LEFT_ARROW)  &kp RC(RS(TAB))         &kp UP_ARROW    &kp RC(TAB)              &kp RG(RIGHT_ARROW)
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END              &trans      &trans  &kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END
&kp LEFT_SHIFT  &kp LG(LC(LEFT_ARROW))  &kp LA(TAB)     &kp LG(LC(RIGHT_ARROW))  &trans               &trans      &trans  &trans              &kp RC(RG(LEFT_ARROW))  &kp RA(TAB)     &kp RG(RC(RIGHT_ARROW))  &kp RSHFT
&trans          &trans                  &trans          &to_layer_0 LANGUAGE_2   &trans               &trans      &trans  &trans                                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q     &to_layer_0 W  &to_layer_0 E     &to_layer_0 R           &to_layer_0 T                                               &to_layer_0 Y  &to_layer_0 U  &to_layer_0 I       &to_layer_0 O  &mo 5
&to_layer_0 A     &to_layer_0 S  &to_layer_0 D     &to_layer_0 F           &to_layer_0 G  &trans                &to_layer_0 MINUS      &to_layer_0 H  &mkp MB1       &mkp MB3            &mkp MB2       &to_layer_0 SEMICOLON
&to_layer_0 Z     &to_layer_0 X  &to_layer_0 C     &to_layer_0 V           &to_layer_0 B  &trans                &to_layer_0 EQUAL      &to_layer_0 N  &mkp MB4       &kp LC(DOWN_ARROW)  &mkp MB5       &to_layer_0 SLASH
&kp LEFT_CONTROL  &kp LEFT_ALT   &kp LEFT_COMMAND  &to_layer_0 LANGUAGE_2  &lt 2 SPACE    &lt 3 LANGUAGE_1      &to_layer_0 BACKSPACE  &lt 1 RETURN                                                     &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
